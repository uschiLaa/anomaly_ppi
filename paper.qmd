---
title: "Are you normal? A new projection pursuit index to assess a sample against a multivariate null distribution"
author: "Annalisa Calvi, Ursula Laa, Dianne Cook"
format:
  jasa-pdf:
    keep-tex: true    
---

```{r include=FALSE}
# Set up chunk for for knitr
knitr::opts_chunk$set(
  fig.width = 5,
  fig.height = 5,
  fig.align = "center",
  out.width = "100%",
  code.line.numbers = FALSE,
  fig.retina = 4,
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  cache = FALSE
)
```

```{r}
#| label: load-libraries
#| warning: false
#| echo: false
library(tourr)
library(mulgar)
library(dplyr)
library(ggplot2)
library(patchwork)
```

```{r}
#| label: plot-theme
theme_set(theme_linedraw() +
   theme(
     aspect.ratio = 1,
     plot.background = element_rect(fill = 'transparent', colour = NA),
     plot.title = element_text(size = 7, hjust = 0.5, vjust = -0.5),
     panel.background = element_rect(fill = 'transparent', 
                                     colour = NA),
     panel.grid.major = element_blank(), 
     panel.grid.minor = element_blank(), 
     axis.title.x = element_blank(), axis.title.y = element_blank(),
     axis.text.x = element_blank(), axis.ticks.x = element_blank(),
     axis.text.y = element_blank(), axis.ticks.y = element_blank(),
     legend.background = element_rect(fill = 'transparent', 
                                      colour = NA),
     legend.key = element_rect(fill = 'transparent', 
                               colour = NA),
     legend.position = "bottom", 
     legend.title = element_blank(), 
     legend.text = element_text(size=4),
     legend.key.height = unit(0.25, 'cm'),
     legend.key.width = unit(0.25, 'cm')
   )
)
interior_annotation <- function(label, position = c(0.92, 0.92)) {
  annotation_custom(grid::textGrob(label = label,
      x = unit(position[1], "npc"), y = unit(position[2], "npc"),
      gp = grid::gpar(cex = 1, col="grey70")))
}
```

## Introduction

Linear projections are useful in many aspects of statistical analysis of multivariate data, and especially useful for visualising the data. A linear projection provides a dimension reduction while maintaining interpretability. For example, a biplot (REF) shows the structure creating the maximum variance in the data, and also visualizing the projection matrix to learn which variables contribute to it. We might find clusters of outliers that were hiding in high dimensions.

More generally, projection pursuit (REF) defines a quantitative criterion for the interestingness of a projection (a projection pursuit index), and searches the space of possible projections for the most interesting one to display. We can also define sequences of interpolated linear projections to better understand a multivariate distribution. Animating a randomly selected interpolated sequence of linear projections is called a grand tour (REF). The combination of these two approaches would then use a projection pursuit index to select interesting projections, but display them via an interpolated path to provide context. This is called a guided tour (REF).

The question is whether we can use these techniques to assess new data samples in the context of an established normal, such as a specific multivariate normal distribution. In physics, the normal distribution may describe experimental results, or a global fit for a selected model, and we might want to compare to a set of other models. In medical applications, the normal distribution might summarize historic data of a healthy population and we compare it to samples from new patients. In outlier detection we might use robust measures to define the normal distribution and look for anomalies. 

This paper describes a new projection pursuit index which is optimized by projections where a new sample is most distant from the existing normal distribution. It is organised as follows. @sec-background provides more context for the methods and visualisation. @sec-anomaly-index provides the details of the new index, and example use is illustrated in @sec-examples. 

## Background {#sec-background}

To compare a new sample with an existing norm, like a multivariate normal distribution, in higher than two dimensions, we have typically used two samples of points. The norm is represented by points on the surface of a $p$-dimensional ellipse, corresponding to a confidence level. A sample of points uniformly distributed on a $p$-dimensional sphere is generated by 

1. Simulating a sample of observations from $N_p(\mu, \Sigma)$. 
2. Transforming each observation to have unit distance from the mean. 

```{r}
#| echo: false
#| fig-cap: "Simulating a uniform sample on a sphere involves sampling from a multivariate normal (a) and transforming each observation to have length equal to 1. A confidence ellipse is generated by transforming the sphere relative to a specified variance-covariance matrix (c), and new observations can be visually assessed to be inside or outside by plotting with the ellipse (d)."
set.seed(717)
d1 <- matrix(rnorm(716 * 2), ncol = 2) 
d2 <- t(apply(d1, 1, geozoo:::l2norm_vec))
vc <- matrix(c(1, -0.5, -0.5, 1), ncol=2, byrow=TRUE)
evc <- eigen(vc)
vc2 <- (evc$vectors) %*% diag(sqrt(evc$values)) %*% t(evc$vectors)
d3 <- d2 %*% vc2 |>
  as.data.frame()

d4 <- d3 |>
  bind_rows(data.frame(V1=0.6, V2=0.6)) |>
  bind_rows(data.frame(V1=0.3, V2=0.3)) |>
  mutate(type = c(rep("ci", nrow(d3)), "in", "out"))

d1 <- as.data.frame(d1)
d2 <- as.data.frame(d2)
d3 <- as.data.frame(d3)

p1 <- ggplot(d1, aes(x=V1, y=V2)) +
  geom_point() +
  xlab(expression(x[1])) +
  ylab(expression(x[2])) +
  ggtitle("a. Bivariate standard normal sample") +
  theme(axis.text = element_blank())

p2 <- ggplot(d2, aes(x=V1, y=V2)) +
  geom_point() +
  xlab(expression(x[1])) +
  ylab(expression(x[2])) +
  ggtitle("b. Uniform on a sphere") +
  theme(axis.text = element_blank())

p3 <- ggplot(d3, aes(x=V1, y=V2)) +
  geom_point() +
  xlab(expression(x[1])) +
  ylab(expression(x[2])) +
  ggtitle("c. Points on surface of confidence ellipse.") +
  theme(axis.text = element_blank())

p4 <- ggplot(d4, aes(x=V1, y=V2, shape=type)) +
  geom_point() +
  xlab(expression(x[1])) +
  ylab(expression(x[2])) +
  ggtitle("d. Observations inside and outside confidence ellipse.") +
  theme(legend.position = "none", 
        axis.text = element_blank())
  
p1 + p2 + p3 + p4 + plot_layout(ncol=2)
```

## Anomaly index {#sec-anomaly-index}

## Examples {#sec-examples}

## Conclusion

